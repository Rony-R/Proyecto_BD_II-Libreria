
/*****FUNCIONES*****/

CREATE OR REPLACE FUNCTION FN_FECHA_MAX(BANDERA NUMBER)
RETURN DATE
IS

    FN_FECHA DATE;

BEGIN

    IF (BANDERA = 1) THEN
        SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_LIBROS INTO FN_FECHA FROM TBL_LIBROS;
    ELSE
        IF (BANDERA = 2) THEN
            SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_SUCURSALES INTO FN_FECHA FROM TBL_SUCURSALES;
        ELSE
            IF (BANDERA = 3) THEN
                SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_EMPLEADOS INTO FN_FECHA FROM TBL_EMPLEADOS;
            ELSE
                IF(BANDERA = 4) THEN
                    SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_CATEGORIAS INTO FN_FECHA FROM TBL_CATEGORIAS;
                ELSE
                    IF(BANDERA = 5) THEN
                        SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_FACTURAS INTO FN_FECHA FROM TBL_TIEMPO;
                    ELSE
                        SELECT MAX(TRUNC(FECHA_INSERT_DW)) AS FECHA_MAX_HECHOS INTO FN_FECHA FROM TBL_HECHOS_LIBRO;
                    END IF;
                END IF;
            END IF;
        END IF;
    END IF;
    
    RETURN FN_FECHA;

END;

/*****PROCEDIMIENTOS*****/

CREATE OR REPLACE PROCEDURE PA_INSERT_LIBROS(
    P_IDLIB TBL_LIBROS.ID_LIBRO%TYPE,
    P_NOMBLIB TBL_LIBROS.NOMBRE_LIBRO%TYPE,
    P_FECHA TBL_LIBROS.FECHA_INSERT_DW %TYPE
)
IS

    PA_MAX_FECH1 DATE;

BEGIN

    PA_MAX_FECH1 := FN_FECHA_MAX(1);

    IF(P_FECHA < PA_MAX_FECH1) THEN

        INSERT INTO TBL_LIBROS VALUES(P_IDLIB, P_NOMBLIB, P_FECHA);
        COMMIT;

    END IF;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_SUCURSAL(
    P_IDSUCUR TBL_SUCURSALES.ID_SUCURSAL%TYPE,
    P_NOMBSUCUR TBL_SUCURSALES.NOMBRE_SUCURSAL%TYPE,
    P_DIR TBL_SUCURSALES.DIRECCION%TYPE,
    P_FECHA TBL_SUCURSALES.FECHA_INSERT_DW%TYPE
)
IS

    PA_MAX_FECH2 DATE;

BEGIN

    PA_MAX_FECH2 := FN_FECHA_MAX(2);

    IF(P_FECHA < PA_MAX_FECH2) THEN

        INSERT INTO TBL_SUCURSALES VALUES(P_IDSUCUR, P_NOMBSUCUR, P_DIR, P_FECHA);
        COMMIT;

    END IF;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_EMPLEADOS(
    P_IDEMP TBL_EMPLEADOS.ID_EMPLEADO%TYPE,
    P_NOMBEMP TBL_EMPLEADOS.NOMBRE_EMPLEADO%TYPE,
    P_FECHA TBL_EMPLEADOS.FECHA_INSERT_DW%TYPE
)
IS

    PA_MAX_FECH3 DATE;

BEGIN

    PA_MAX_FECH3 := FN_FECHA_MAX(3);

    IF(P_FECHA < PA_MAX_FECH3) THEN

        INSERT INTO TBL_EMPLEADOS VALUES(P_IDEMP, P_NOMBEMP, P_FECHA);
        COMMIT;

    END IF;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_CATEGORIAS(
    P_IDCAT TBL_CATEGORIAS.ID_CATEGORIA%TYPE,
    P_DESC TBL_CATEGORIAS.DESCRIPCION%TYPE,
    P_FECHA TBL_CATEGORIAS.FECHA_INSERT_DW%TYPE
)
IS

    PA_MAX_FECH4 DATE;

BEGIN

    PA_MAX_FECH4 := FN_FECHA_MAX(4);

    IF(P_FECHA < PA_MAX_FECH4) THEN

        INSERT INTO TBL_CATEGORIAS VALUES(P_IDCAT, P_DESC, P_FECHA);
        COMMIT;

    END IF;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_TIEMPO(
    P_COD TBL_TIEMPO.COD_REG_TIEMPO%TYPE,
    P_ANIO TBL_TIEMPO.ANIO%TYPE,
    P_MES TBL_TIEMPO.MES%TYPE,
    P_DIA TBL_TIEMPO.DIA%TYPE,
    P_FECHA TBL_TIEMPO.FECHA_INSERT_DW%TYPE
)
IS

    PA_MAX_FECH5 DATE;

BEGIN

    PA_MAX_FECH5 := FN_FECHA_MAX(5);

    IF(P_FECHA < PA_MAX_FECH5) THEN

        INSERT INTO TBL_TIEMPO VALUES(P_COD, P_ANIO, P_MES, P_DIA, P_FECHA);
        COMMIT;

    END IF;

END;


CREATE OR REPLACE PROCEDURE PA_INSERT_HECHOS(
    P_COD TBL_HECHOS_LIBRO.CODIGO_REGISTRO%TYPE,
    P_IDLIB TBL_LIBROS.ID_LIBRO%TYPE,
    P_IDCAT TBL_CATEGORIAS.ID_CATEGORIA%TYPE,
    P_IDSUCUR TBL_SUCURSALES.ID_SUCURSAL%TYPE,
    P_IDEMP TBL_EMPLEADOS.ID_EMPLEADO%TYPE,
    P_CODTIEMPO TBL_TIEMPO.COD_REG_TIEMPO%TYPE,
    P_VENTA TBL_HECHOS_LIBRO.VENTA_TOTAL%TYPE,
    P_PRESTADO TBL_HECHOS_LIBRO.NUM_VECES_PRESTADO%TYPE,
    P_FECHA TBL_HECHOS_LIBRO.FECHA_INSERT_DW%TYPE
)
IS

    PA_MAX_FECH6 DATE;

BEGIN

    PA_MAX_FECH6 := FN_FECHA_MAX(6);

    IF(P_FECHA < PA_MAX_FECH6) THEN

        INSERT INTO TBL_HECHOS_LIBRO VALUES(P_COD, P_IDLIB, P_IDCAT, P_IDSUCUR, P_IDEMP, P_CODTIEMPO, P_VENTA, P_PRESTADO, P_FECHA);
        COMMIT;

    END IF;

END;

--Procedimientos primera vez
CREATE OR REPLACE PROCEDURE PA_INSERT_LIB(
    P_IDLIB TBL_LIBROS.ID_LIBRO%TYPE,
    P_NOMBLIB TBL_LIBROS.NOMBRE_LIBRO%TYPE,
    P_FECHA TBL_LIBROS.FECHA_INSERT_DW %TYPE
)
IS
BEGIN

    INSERT INTO TBL_LIBROS VALUES(P_IDLIB, P_NOMBLIB, P_FECHA);
    COMMIT;

    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_SUCUR(
    P_IDSUCUR TBL_SUCURSALES.ID_SUCURSAL%TYPE,
    P_NOMBSUCUR TBL_SUCURSALES.NOMBRE_SUCURSAL%TYPE,
    P_DIR TBL_SUCURSALES.DIRECCION%TYPE,
    P_FECHA TBL_SUCURSALES.FECHA_INSERT_DW%TYPE
)
IS
BEGIN

    INSERT INTO TBL_SUCURSALES VALUES(P_IDSUCUR, P_NOMBSUCUR, P_DIR, P_FECHA);
    COMMIT;

    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;

END;

CREATE OR REPLACE PROCEDURE PA_INSERT_EMPLEADOS(
    P_IDEMP TBL_EMPLEADOS.ID_EMPLEADO%TYPE,
    P_NOMBEMP TBL_EMPLEADOS.NOMBRE_EMPLEADO%TYPE,
    P_FECHA TBL_EMPLEADOS.FECHA_INSERT_DW%TYPE
)
IS
BEGIN

    INSERT INTO TBL_EMPLEADOS VALUES(P_IDEMP, P_NOMBEMP, P_FECHA);
    COMMIT;

    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;
    
END;

CREATE OR REPLACE PROCEDURE PA_INSERT_CAT(
    P_IDCAT TBL_CATEGORIAS.ID_CATEGORIA%TYPE,
    P_DESC TBL_CATEGORIAS.DESCRIPCION%TYPE,
    P_FECHA TBL_CATEGORIAS.FECHA_INSERT_DW%TYPE
)
IS
BEGIN

    INSERT INTO TBL_CATEGORIAS VALUES(P_IDCAT, P_DESC, P_FECHA);
    COMMIT;

    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;

END;

--CONSULTAS PARA EL ETL:

/*Para la tabla Tiempo:*/
SELECT FECHA_FACTURA AS COD_REG_TIEMPO, 
       EXTRACT(YEAR FROM FECHA_FACTURA) AS ANIO,
       EXTRACT(MONTH FROM FECHA_FACTURA) AS MES,
       EXTRACT(DAY FROM FECHA_FACTURA) AS DIA,
       FECHA_INSERT
FROM TBL_FACTURAS;


/*Para la tabla Hechos:*/
SELECT TBL_LIBROS.ID_LIBRO,
       TBL_CATEGORIAS.ID_CATEGORIA,
       TBL_SUCURSALES.ID_SUCURSAL,
       TBL_EMPLEADOS.ID_EMPLEADO,
       TBL_TIEMPO.COD_REG_TIEMPO
FROM TBL_LIBROS A;

